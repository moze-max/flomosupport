# name: Flutter Android CI/CD Pipeline

# on:
#   push:
#     branches: [ main, dev ]
#     tags: [ 'v*' ]
#   pull_request:
#     branches: [ main, dev ]

# env:
#   BUILD_TYPE: release
#   KEYSTORE_PATH: android/app/key.jks

# jobs:
#   build-and-test:
#     name: Build & Test
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0  # 获取完整提交历史[4](@ref)

#       - name: Setup Java (JDK 17)
#         uses: actions/setup-java@v3
#         with:
#           distribution: 'temurin'
#           java-version: '17'  # 适配最新Android构建需求[2,6](@ref)

#       - name: Setup Flutter
#         uses: subosito/flutter-action@v2
#         with:
#           with:
#           channel: main
#           cache: true
#           # optional parameters follow
#           cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache
#           cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
#           pub-cache-key: "flutter-pub:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache of dart pub get dependencies
#           pub-cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
#       - run: flutter --version

#       # - name: Restore pub cache
#       #   uses: actions/cache@v3
#       #   with:
#       #     path: |
#       #       ~/.pub-cache
#       #       build/
#       #     key: ${{ runner.os }}-pub-${{ hashFiles('​**​/pubspec.lock') }}

#       - name: Install dependencies
#         run: flutter pub get

#       # - name: Run tests
#       #   run: flutter test --coverage

#       - name: Code Linting
#         run: dart analyze --fatal-infos

#   build-apk:
#     name: Build Signed APK
#     needs: build-and-test
#     runs-on: ubuntu-latest
    
#     steps:
#     - run: flutter build apk
#     - run: flutter build appbundle

#   # release:
#   #   name: Create GitHub Release
#   #   needs: build-apk
#   #   if: startsWith(github.ref, 'refs/tags/')
#   #   runs-on: ubuntu-latest
    
#   #   steps:
#   #     - name: Download Artifacts
#   #       uses: actions/download-artifact@v3
#   #       with:
#   #         name: android-apks

#   #     - name: Generate Release Notes
#   #       uses: ncipollo/release-action@v1
#   #       with:
#   #         tag: ${{ github.ref_name }}
#   #         artifacts: "*.apk"
#   #         generateReleaseNotes: true
#   #         token: ${{ secrets.GITHUB_TOKEN }}

#   windowsversion:
#     runs-on: windows-latest
#     steps:
#       - name: Clone repository
#         uses: actions/checkout@v4
#       - name: Set up Flutter
#         uses: subosito/flutter-action@v2
#         with:
#           channel: main
#           cache: true
#           # optional parameters follow
#           cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache
#           cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
#           pub-cache-key: "flutter-pub:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache of dart pub get dependencies
#           pub-cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
#       - run: flutter --version
#       - run: flutter build windows